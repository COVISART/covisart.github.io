/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 NGS.gltf --transform --shadows 
Files: NGS.gltf [299.14MB] > NGS-transformed.glb [10.92MB] (96%)
*/

import React, { useRef } from 'react'
import { useGLTF, MeshReflectorMaterial, MeshWobbleMaterial,MeshTransmissionMaterial, BakeShadows  } from '@react-three/drei'
import { EffectComposer, Bloom, DepthOfField } from '@react-three/postprocessing'

export function Model(props) {
  const { nodes, materials } = useGLTF('/NGS-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <mesh castShadow geometry={nodes.NG_A1K1009.geometry} material={materials['Paint Metallic Dark Cool Grey #1']}  position={[-1.308, 1.4, 0]} rotation={[3.14, 1.571, 0]} >
      <MeshReflectorMaterial
            blur={[300, 30]}
            resolution={2048}
            mixBlur={1}
            mixStrength={80}
            roughness={0.1}
            depthScale={1.2}
            minDepthThreshold={0.4}
            maxDepthThreshold={1.4}
            color="yellow"
            metalness={0.8}
          />
      </mesh>
      <mesh castShadow geometry={nodes.NG_T1K1002.geometry}  position={[1.278, 1.39, 0]} rotation={[Math.PI / 2, 0, Math.PI / 2]} >
      <MeshTransmissionMaterial />
      </mesh>
    </group>
  )
}

useGLTF.preload('/NGS-transformed.glb')
