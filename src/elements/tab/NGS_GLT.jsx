/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 NGS_GLT.glb --transform --shadows --keepgroups --keepmeshes 
Files: NGS_GLT.glb [224.04MB] > NGS_GLT-transformed.glb [10.84MB] (95%)
*/

import React, { useRef } from 'react'
import { useGLTF,MeshReflectorMaterial } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/NGS_GLT-transformed.glb')
  console.log(materials.led)
  materials.led.color.r =1;
  materials.led.color.g =0;
  materials.led.color.b =0;
  materials.metal.metalness=0.8;
  materials.metal.roughness=0.2;
  return (
    <group {...props} dispose={null}>
      <group>
        <mesh  geometry={nodes.AM8552.geometry} material={materials.metal} position={[0, 1.4, 0]}></mesh>
        <mesh  geometry={nodes.NG_Axis_1.geometry} material={materials.metal} position={[0, 1.4, 0]}></mesh>
        <mesh  geometry={nodes.NG_Axis_2.geometry} material={materials.metal} position={[0, 1.4, 0]}></mesh>
        <mesh  geometry={nodes.NG_Axis_3.geometry} material={materials.metal} position={[0, 1.4, 0]}></mesh>
        <mesh  geometry={nodes.NG_Platform.geometry} material={materials.metal}></mesh>
        <mesh  geometry={nodes.NG_Light.geometry} material={materials.led} position={[1.615, 1.403, 0]}></mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/NGS_GLT-transformed.glb')
